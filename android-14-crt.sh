#!/system/bin/sh

# Thanks to;
## https://httptoolkit.com/blog/intercepting-android-https/
## https://github.com/httptoolkit/httptoolkit-server/blob/405ec0a4f165853ab0b90172710d4455559f4519/src/interceptors/android/adb-commands.ts#L256-L361


# We have a challenge here. How do we add a new cert to /system/etc/security/cacerts,
# when that's generally read-only & often hard to remount (emulators require startup
# args to allow RW system files). Solution: mount a virtual temporary FS on top of it.

# Fail on any error
set -e

# Paths
ANDROID_TEMP="/data/local/tmp"
CERTIFICATE_PATH="/sdcard/9a5ba575.0" # Pass the certificate path as the first argument
INJECTION_SCRIPT_PATH="$ANDROID_TEMP/android-14-crt.sh"

# Function to copy certificates
copy_certs() {
    if [ -d "/apex/com.android.conscrypt/cacerts" ]; then
        cp /apex/com.android.conscrypt/cacerts/* /data/local/tmp/htk-ca-copy/
    else
        cp /system/etc/security/cacerts/* /data/local/tmp/htk-ca-copy/
    fi
}

# Create a temp directory to hold existing certificates
mkdir -p -m 700 /data/local/tmp/htk-ca-copy

# Copy the existing certificates
copy_certs

# Create an in-memory mount on top of the system certs folder
mount -t tmpfs tmpfs /system/etc/security/cacerts

# Move the copied certs back into the new tmpfs mount
mv /data/local/tmp/htk-ca-copy/* /system/etc/security/cacerts/

# Add the new certificate
cp "$CERTIFICATE_PATH" /system/etc/security/cacerts/

# Update permissions and SELinux context
chown root:root /system/etc/security/cacerts/*
chmod 644 /system/etc/security/cacerts/*
chcon u:object_r:system_file:s0 /system/etc/security/cacerts/*

echo "System cacerts setup completed"

# Handle APEX in Android 14+ (inject certificates into each namespace)
if [ -d "/apex/com.android.conscrypt/cacerts" ]; then
    echo 'Injecting certificates into APEX cacerts'

    # Get Zygote process IDs
    ZYGOTE_PID=$(pidof zygote || true)
    ZYGOTE64_PID=$(pidof zygote64 || true)
    Z_PIDS="$ZYGOTE_PID $ZYGOTE64_PID"

    # Inject the mount into Zygote's namespace
    for Z_PID in $Z_PIDS; do
        if [ -n "$Z_PID" ]; then
            nsenter --mount=/proc/$Z_PID/ns/mnt -- \
                /bin/mount --bind /system/etc/security/cacerts /apex/com.android.conscrypt/cacerts
        fi
    done

    echo 'Zygote APEX certificates remounted'

    # Inject the mount into running apps
    APP_PIDS=$(ps -o 'PID' -P $Z_PIDS | grep -v PID)

    for PID in $APP_PIDS; do
        nsenter --mount=/proc/$PID/ns/mnt -- \
            /bin/mount --bind /system/etc/security/cacerts /apex/com.android.conscrypt/cacerts &
    done
    wait # Wait for parallel operations to finish

    echo "APEX certificates remounted for $(echo $APP_PIDS | wc -w) apps"
fi

# Clean up temporary directories and script
rm -r /data/local/tmp/htk-ca-copy
rm "$INJECTION_SCRIPT_PATH"

echo "System cert successfully injected"
